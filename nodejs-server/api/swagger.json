{
  "swagger": "2.0",
  "info": {
    "title": "WUber API",
    "description": "Query your family",
    "version": "1.0.0"
  },
  "produces": ["application/json"],
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
  
  "/relations/ancestors": {
    "get": {
      "x-swagger-router-controller": "Relations",
      "tags": ["Relations"],
      "operationId": "relationsAncestorsGet",
      "parameters": [
        
        {
  "name" : "person",
  "in" : "query",
  "description" : "the name of the person.",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "generation",
  "in" : "query",
  "description" : "the number of generation of ancestors.",
  "required" : true,
  "type" : "number",
  "format" : "int"
},
        
        {
  "name" : "bloodrelative",
  "in" : "query",
  "description" : "Type of blood relative, lineal, collateral, adopted or all",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "An array of persons who are ancesors of the asked person",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Person"
    }
  }
}
        ,
        
        "default": {
  "description" : "Unexpected error",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/relations/descendants": {
    "get": {
      "x-swagger-router-controller": "Relations",
      "tags": ["Relations"],
      "operationId": "relationsDescendantsGet",
      "parameters": [
        
        {
  "name" : "person",
  "in" : "query",
  "description" : "the name of the person.",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "generation",
  "in" : "query",
  "description" : "the number of generation of descendants.",
  "required" : true,
  "type" : "number",
  "format" : "int"
},
        
        {
  "name" : "bloodrelative",
  "in" : "query",
  "description" : "Type of blood relative, lineal, collateral, adopted or all.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "An array of persons who are descendants of the asked person",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Person"
    }
  }
}
        ,
        
        "default": {
  "description" : "Unexpected error",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/family": {
    "get": {
      "x-swagger-router-controller": "Families",
      "tags": ["Families"],
      "operationId": "familyGet",
      "parameters": [
        
        {
  "name" : "familyname",
  "in" : "query",
  "description" : "The name of the family.",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "generation",
  "in" : "query",
  "description" : "The number of generation below the father of the asked family.",
  "required" : true,
  "type" : "number",
  "format" : "int"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "An array of families",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Family"
    }
  }
}
        ,
        
        "default": {
  "description" : "Unexpected error",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/Iam": {
    "get": {
      "x-swagger-router-controller": "Myself",
      "tags": ["Myself"],
      "operationId": "iamGet",
      "parameters": [
        
        {
  "name" : "person",
  "in" : "query",
  "description" : "the name of the person.",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "An array of persons who are direct family members of the asked person",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Person"
    }
  }
}
        ,
        
        "default": {
  "description" : "Unexpected error",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } 
  
   
  }, "definitions": {
  "Person": {
  "properties" : {
    "familyname" : {
      "type" : "string",
      "description" : "The family name (sir name, last name) of the person."
    },
    "given_name" : {
      "type" : "string",
      "description" : "The given name (first name) of person."
    },
    "sex" : {
      "type" : "string",
      "description" : "The sex of the person."
    },
    "image" : {
      "type" : "string",
      "description" : "Image URL representing the person."
    }
  }
},"Family": {
  "properties" : {
    "family_name" : {
      "type" : "string",
      "description" : "a name of a family"
    },
    "residence" : {
      "type" : "string",
      "description" : "The residence of the family."
    }
  }
},"Error": {
  "properties" : {
    "message" : {
      "type" : "string"
    },
    "fields" : {
      "type" : "string"
    }
  }
}
  }
}
